export default class t{constructor(t,e){this.dictionary,this.used=e,this.loadDictionary(t)}loadDictionary(e){for(const r in e){const a=e[r];if("string"==typeof a){t.LOCATEREGEX.lastIndex=0;const[,...o]=t.LOCATEREGEX.exec(a)||[];if(0===o.length)continue;e[r]=e=>t.refFormat(t.replaceFormat(a,e.rep),e.ref)}else this.loadDictionary(a)}this.dictionary=e}get(t=""){const e=t.split(".");let r=this.dictionary;for(const t of e)r=r[t];return r}static replaceFormat(t,e){for(const r in e)t=t.replace(new RegExp(`%{${r}}`,"g"),e[r]);return t}static refFormat(e,r){t.REFREGEX.lastIndex=0;const[,...a]=t.REFREGEX.exec(e)||[];if(Array.isArray(r)&&a.length!==r.length)throw new Error("The array should have the same amount of functions as the lang text has variable as!");for(let t=0;t<a.length;t++)e=e.replace(new RegExp(`&{${a[t]}}`),r[t](a[t]));return e}}t.LOCATEREGEX=/(%|&){(.+)}/g,t.REFREGEX=/&{(.+)}/g;
